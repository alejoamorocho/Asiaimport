name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: cosmedical_db_test
          POSTGRES_USER: cosmedical_user
          POSTGRES_PASSWORD: cosmedical_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-wheel \
          python3-cffi \
          libcairo2 \
          libpango-1.0-0 \
          libpangocairo-1.0-0 \
          libgdk-pixbuf2.0-0 \
          libffi-dev \
          shared-mime-info \
          mime-support
        
    - name: Install Python dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
        
    - name: Run Tests with Coverage
      working-directory: ./backend
      env:
        DATABASE_URL: postgresql://cosmedical_user:cosmedical_password@localhost:5432/cosmedical_db_test
        REDIS_URL: redis://localhost:6379/0
        DJANGO_SETTINGS_MODULE: core.settings
        SECRET_KEY: test-key-not-used-in-production
        DEBUG: "True"
      run: |
        coverage run manage.py test
        coverage report
        coverage xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Run linters
      run: |
        # Verificar formato con Black
        black --check backend
        # Verificar imports con isort
        isort --check-only backend
        # Verificar estilo con flake8
        flake8 backend --max-line-length=100 --exclude=migrations
